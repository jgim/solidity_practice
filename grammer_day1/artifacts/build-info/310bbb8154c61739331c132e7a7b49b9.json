{
	"id": "310bbb8154c61739331c132e7a7b49b9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"1_변수.sol": {
				"content": "\n// SPDX-License-Identifier: MIT\npragma solidity >=0.7.0 <0.9.0;\n\ncontract exam1 {\n    /*\n        변수 : 값을 지속적으로 변경 할 수 있음.\n        상수 : 한번 넣은 값은 변경 불가.\n        자료형 가시성 지정자 변수명 = 값\n        uint public a = 3;\n        a=4;\n        uint public constant b=3;\n        b=4\n        자료형 타입\n        값 타입 Vs 참조 타입\n        값 타입 : uint, int, bool , address (고정 길이), bytes1...bytes32 (고정 길이)\n        참조 타입 : bytes(동적 길이),string (동적 길이), array(배열), mapping (매핑), struct (구조체)\n\n        int : 기호있는 integer\n        int8 : -2^7 ~ 2^7-1\n        int16: -2^15~2^15-1\n        int32: -2^31~2^31-1\n        int64: -2^63~2^63-1\n        int128 : -2^127~2^127-1\n        int256 (=int): -2^255~2^255-1\n        uint:  기호없는 integer\n        uint8 : 0~2^8-1\n        uint16: -0~2^16-1\n        uint32: -0~2^32-1\n        uint64: -0~2^64-1\n        uint128 : -0~2^128-1\n        uint256 (=uint): 0~2^256-1\n        bool : true or false\n        산술연산자 : + - * / **\n        논리 연산자 : &&, ||\n        비교연산자: <,>,!=,==, >= , <=\n\n    */\n\n\n    // uint public a = 1;\n    // int public b = -1;\n    // bool public c = true;\n    // bytes1 public d = hex\"11\";  // 1바이트만사용\n    // bytes2 public d2 = hex\"abcd\";  // 2바이트만사용\n\n    // string public e = \"abcd\";\n\n    // //산술 연산자 : +,-,*,/\n    // uint public f = 1+2;\n    // uint public g = 3-2;\n    // uint public h = 4*2;\n    // uint public i = 4/2;\n    // uint public j = 4**2;  //4거듭제곱\n\n    // //논리 연산자 : &&, ||\n    // bool public k = true && true; // true\n    // bool public m = true && false; // false\n    // bool public n = false && false; //false\n\n    // bool public l = true || true; // true\n    // bool public o = true || false; // true\n    // bool public p = false || false; // false\n\n    // // 비교연산자\n    // bool public q = 3>5; //false\n    // bool public r = 3<=4; // true\n    // bool public s = 3==3; // true\n    // bool public t = 3!=3; // false\n\n\n    // uint public constant z=3; // 상수\n\n\n    // // 쉬프트연산자\n    // bytes1 public test1=hex\"11\";   //00010001\n    // bytes1 public test2=test1>>1;  //00001000 출력은 8이됨\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"1_변수.sol": {
				"exam1": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"1_\\xeb\\xb3\\x80\\xec\\x88\\x98.sol\":66:2311  contract exam1 {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"1_\\xeb\\xb3\\x80\\xec\\x88\\x98.sol\":66:2311  contract exam1 {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e5125d92884c50affcf0acb361e7368e8be4791b2392b3d9fc3caaa9395fc91464736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50603e80601a5f395ff3fe60806040525f80fdfea2646970667358221220e5125d92884c50affcf0acb361e7368e8be4791b2392b3d9fc3caaa9395fc91464736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 SLT 0x5D SWAP3 DUP9 0x4C POP 0xAF 0xFC CREATE 0xAC 0xB3 PUSH2 0xE736 DUP15 DUP12 0xE4 PUSH26 0x1B2392B3D9FC3CAAA9395FC91464736F6C634300081400330000 ",
							"sourceMap": "66:2245:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040525f80fdfea2646970667358221220e5125d92884c50affcf0acb361e7368e8be4791b2392b3d9fc3caaa9395fc91464736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 SLT 0x5D SWAP3 DUP9 0x4C POP 0xAF 0xFC CREATE 0xAC 0xB3 PUSH2 0xE736 DUP15 DUP12 0xE4 PUSH26 0x1B2392B3D9FC3CAAA9395FC91464736F6C634300081400330000 ",
							"sourceMap": "66:2245:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "64",
								"totalCost": "12464"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 66,
									"end": 2311,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 66,
									"end": 2311,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 66,
									"end": 2311,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 66,
									"end": 2311,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 66,
									"end": 2311,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 66,
									"end": 2311,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 66,
									"end": 2311,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 66,
									"end": 2311,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 66,
									"end": 2311,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 2311,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 66,
									"end": 2311,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 66,
									"end": 2311,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 66,
									"end": 2311,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 66,
									"end": 2311,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 66,
									"end": 2311,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 66,
									"end": 2311,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 66,
									"end": 2311,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 66,
									"end": 2311,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 2311,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 66,
									"end": 2311,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 2311,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e5125d92884c50affcf0acb361e7368e8be4791b2392b3d9fc3caaa9395fc91464736f6c63430008140033",
									".code": [
										{
											"begin": 66,
											"end": 2311,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 66,
											"end": 2311,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 66,
											"end": 2311,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 66,
											"end": 2311,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66,
											"end": 2311,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 2311,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"1_변수.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"1_\\ubcc0\\uc218.sol\":\"exam1\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"1_\\ubcc0\\uc218.sol\":{\"keccak256\":\"0x285ff3d173fecbde87eb5f4425c038851112aee8f6cb5da5eb05bad1cf51dd69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://610533354740e162b9ce65a3202560ae097d950f7a67baabd0d094a90ea668bf\",\"dweb:/ipfs/QmYYHhJS2Vsck1XYwTtEb73xZSCvsex8Fpi3vEXRhCktEe\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"1_변수.sol": {
				"ast": {
					"absolutePath": "1_변수.sol",
					"exportedSymbols": {
						"exam1": [
							2
						]
					},
					"id": 3,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "exam1",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "exam1",
							"nameLocation": "75:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "66:2245:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:2279:0"
				},
				"id": 0
			}
		}
	}
}